name: release

on:
    push:
        branches:
            - main

env:
    CI: 1
    GITHUB_TOKEN: ${{ secrets.PERSONAL_PAT }}
    PYTHON_VERSION: "3.12"
    PYPI_INDEX_URL: ${{ secrets.PYPI_INDEX_URL }}
    PYPI_USER: ${{ secrets.PYPI_USER }}
    PYPI_AUTH: ${{ secrets.PYPI_AUTH }}
    DEPLOYMENT_SERVER_URL: ${{ secrets.DEPLOYMENT_SERVER_URL }}
    DEPLOYMENT_SERVER_USER: ${{ secrets.DEPLOYMENT_SERVER_USER }}
    DEPLOYMENT_SERVER_PASS: ${{ secrets.DEPLOYMENT_SERVER_PASS }}

permissions:
    contents: write # to be able to publish a GitHub release
    issues: write # to be able to comment on released issues
    pull-requests: write # to be able to comment on released pull requests
    id-token: write # to enable use of OIDC for npm provenance
    packages: write

jobs:
    release:
        runs-on: ubuntu-24.04
        steps:
            - name: Install python
              uses: actions/setup-python@v4
              with:
                python-version: ${{ env.PYTHON_VERSION }}
            - name: Install hatch
              run: pip install hatch
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                fetch-depth: 0
            - name: Run tests
              run: hatch run dev:APPLICATION_CONFIG_DIR=./config test tests/utils # NOTE: tests that includes database connections excluded
            - name: Create a git release tag
              id: release
              uses: cocogitto/cocogitto-action@v3
              with:
                release: true
                git-user: 'Murat GÃ¶zel'
                git-user-email: 'murat@gozel.com.tr'
            - name: Print git release tag
              run: "echo '${{ steps.release.outputs.version }}'"
            - name: Create github release
              if: steps.release.outputs.version != ''
              run: |
                gh release create ${{ steps.release.outputs.version }} \
                  --title "${{ steps.release.outputs.version }}" \
                  --generate-notes \
                  --latest
            - name: Build package
              if: steps.release.outputs.version != ''
              run: "hatch build -c"
            - name: Publish package
              if: steps.release.outputs.version != ''
              run: "hatch publish --user '${{ env.PYPI_USER }}' --auth '${{ env.PYPI_AUTH }}' --repo '${{ env.PYPI_INDEX_URL }}'"
            - name: Trigger deploy
              if: env.DEPLOYMENT_SERVER_URL
              run: |
                curl -X POST "${{ env.DEPLOYMENT_SERVER_URL }}" \
                -H "Content-Type: application/json" \
                -u "${{ env.DEPLOYMENT_SERVER_USER }}:${{ env.DEPLOYMENT_SERVER_PASS }}" \
                -d '{"version":"${{ steps.release.outputs.version }}","git_url":"git://github.com/${{ github.repository }}.git"}'
